version: '3.8'

services:
    postgres:
        image: postgres:14
        container_name: chatty-app-postgres
        networks:
            - chatty-app
        environment:
            - POSTGRES_HOST=${DB_HOST}
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_USER=${DB_USERNAME}
        volumes:
            - ./db-volumes/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./db-volumes/postgresql/data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        profiles: ["system"]
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin"]
            interval: 10s
            timeout: 5s
            retries: 5

    server:
        container_name: chatty-app-server
        image: chatty-app-server
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "9696:9696"
            - "9000:9000"
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        command: npm run start:dev
        depends_on:
            - postgres
        profiles: ["system", "servers"]
        networks:
            - chatty-app

    server-2:
        container_name: chatty-app-server-2
        image: chatty-app-server
        build:
            context: .
            dockerfile: ./Dockerfile
        ports:
            - "9697:9696"
            - "9001:9000"
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        command: npm run start:dev
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        profiles: ["system", "servers"]
        networks:
            - chatty-app

    redis:
        image: redis:4
        container_name: chatty-app-redis
        ports:
        - "6379:6379"
        volumes:
        - ./db-volumes/redis/data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: always
        profiles: ["system"]
        networks:
            - chatty-app

    adminer:
        image: adminer
        container_name: chatty-app-adminer
        depends_on:
            - postgres
        ports:
            - "8080:8080"
        profiles: ["adminer"]
        networks:
            - chatty-app

networks:
    chatty-app:
        external:
            name: chatty-app

volumes:
    postgres:
